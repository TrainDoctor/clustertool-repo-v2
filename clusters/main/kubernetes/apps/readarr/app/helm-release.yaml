apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: readarr
    namespace: readarr
spec:
    interval: 15m
    chart:
        spec:
            chart: readarr
            version: 24.5.2
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: readarr
    values:
        TZ: America/Los_Angeles
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        credentials:
            readarr:
                name: readarr
                type: s3
                url: ${VOLSYNC_S3_URL}
                bucket: ${VOLSYNC_S3_BUCKET}
                accessKey: ${VOLSYNC_S3_ACCESSKEY}
                secretKey: ${VOLSYNC_S3_SECRETKEY}
                encrKey: ${VOLSYNC_S3_ENCKEY}
        ingress:
          main:
            enabled: true
            ingressClassName: external
            integrations:
              traefik:
                enabled: false
            annotations:
              nginx.ingress.kubernetes.io/auth-url: http://authentik-http.authentik.svc.cluster.local:10230/outpost.goauthentik.io/auth/nginx
              nginx.ingress.kubernetes.io/auth-signin: https://auth.${DOMAIN_0}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
              nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
              nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
            hosts:
              - host: read.${DOMAIN_0}
                paths:
                  - path: /
                    pathType: Prefix
        metrics:
            main:
                enabled: false
                endpoints:
                    - path: /metrics
                      port: metrics
                prometheusRule:
                    enabled: false
                targetSelector: metrics
                type: servicemonitor
        persistence:
            config:
                enabled: true
                size: 1Gi
                targetSelector:
                    main:
                        main:
                            mountPath: /config
                volsync:
                    - credentials: readarr
                      dest:
                        enabled: true
                      name: cfg
                      src:
                        enabled: true
                      type: restic
            data-vol:
                enabled: true
                type: nfs
                mountPath: /data
                path: /mnt/PoolTwo/data
                server: ${MEDIA_LOCAL_NAS_IP}
        release_name: readarr
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                readOnlyRootFilesystem: true
                runAsGroup: ${MEDIA_GROUP}
                runAsUser: ${MEDIA_USER}
            pod:
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                sharedKey: custom-shared-key
                loadBalancerIP: "${MEDIA_IP}"
                ports:
                    main:
                        port: 8787
                type: LoadBalancer
        updated: true
        workload:
            main:
                replicas: 1
                type: Deployment
