apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: readarr
    namespace: readarr
spec:
    interval: 15m
    chart:
        spec:
            chart: readarr
            version: 24.3.2
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: readarr
    values:
        TZ: America/Los_Angeles
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        credentials:
            readarr:
                name: readarr
                type: s3
                url: ${VOLSYNC_S3_URL}
                bucket: ${VOLSYNC_S3_BUCKET}
                accessKey: ${VOLSYNC_S3_ACCESSKEY}
                secretKey: ${VOLSYNC_S3_SECRETKEY}
                encrKey: ${VOLSYNC_S3_ENCKEY}
        ingress:
            main:
                enabled: false
        metrics:
            main:
                enabled: false
                endpoints:
                    - path: /metrics
                      port: metrics
                prometheusRule:
                    enabled: false
                targetSelector: metrics
                type: servicemonitor
        persistence:
            config:
                enabled: true
                readOnly: false
                size: 1Gi
                storageClass: ""
                targetSelector:
                    main:
                        main:
                            mountPath: /config
                volsync:
                    - credentials: readarr
                      dest:
                        enabled: true
                      name: cfg
                      src:
                        enabled: false
                      type: restic
            data-vol:
                enabled: true
                type: nfs
                mountPath: /data
                path: /mnt/PoolTwo/data
                server: ${MEDIA_LOCAL_NAS_IP}
        release_name: readarr
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: ${MEDIA_GROUP}
                runAsUser: ${MEDIA_USER}
            pod:
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                sharedKey: custom-shared-key
                loadBalancerIP: "${MEDIA_IP}"
                ports:
                    main:
                        port: 8787
                type: LoadBalancer
        updated: true
        workload:
            main:
                podSpec:
                    containers:
                        main:
                            env:
                                READARR__AUTHENTICATION_METHOD: ""
                                READARR__PORT: '{{ .Values.service.main.ports.main.port }}'
                            probes:
                                liveness:
                                    enabled: true
                                    path: /ping
                                    type: http
                                readiness:
                                    enabled: true
                                    path: /ping
                                    type: http
                                startup:
                                    enabled: true
                                    path: /ping
                                    type: http
                replicas: 1
                type: Deployment
